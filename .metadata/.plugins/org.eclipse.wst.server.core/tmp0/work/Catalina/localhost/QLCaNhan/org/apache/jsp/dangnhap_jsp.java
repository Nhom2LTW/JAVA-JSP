/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.70
 * Generated at: 2016-10-15 15:08:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dangnhap_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Calendar</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"bootstrap/Css.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"angular-validate/font-awesome-4.6.3/css/font-awesome.css\">\r\n");
      out.write("<!-- bootstrap -->\r\n");
      out.write("<link href=\"bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"bootstrap/js/jquery-3.1.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"angular-validate/angular.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"bootstrap/js.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"main\">\r\n");
      out.write("\t\t<div id=\"main-container\">\r\n");
      out.write("\t\t\t<div id=\"main-menu\" style=\"background-color: #2F4F4F;\">\r\n");
      out.write("\t\t\t\t<ul class=\"nav nav-tabs\" role=\"tablist\">\r\n");
      out.write("\t\t\t\t\t<li class=\"active\"><a href=\"#\">Đăng Nhập</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"dangki.jsp\">Đăng Kí</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"lienhe.jsp\">Liên Hệ</a></li>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"main-form\" ng-app=\"demoApp\" ng-controller=\"RegisterCtrl\">\r\n");
      out.write("\t\t\t\t<h1>Đăng Nhập</h1>\r\n");
      out.write("\t\t\t\t<div id=\"form-dangnhap\">\r\n");
      out.write("\t\t\t\t\t<form id=\"register-form\" class=\"form-horizontal\" name=\"form\"\r\n");
      out.write("\t\t\t\t\t\tng-submit=\"register()\" novalidate>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"accountname\" class=\"col-xs-3 control-label\">Tên\r\n");
      out.write("\t\t\t\t\t\t\t\tđăng nhập</label>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-xs-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input class=\"form-control\" name=\"accountname\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tng-model=\"accountname\" type=\"text\" placeholder=\"Tên đăng nhập\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tng-minlength=\"6\" ng-maxlength=\"20\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tng-pattern=\"/^[a-zA-Z0-9]+$/\" required>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-xs-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"fa fa-check text-success\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tng-show=\"form.accountname.$dirty && form.accountname.$valid\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\t\t\t\t\tng-show=\"form.accountname.$dirty && form.accountname.$invalid\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"text-danger\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<i class=\"fa fa-times text-danger\"></i> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-show=\"form.accountname.$error.required\">Tên đăng\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tnhập không được bỏ trống</span> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-show=\"form.accountname.$error.minlength\">Tên đăng\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tnhập phải dài hơn 6 kí tự</span> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-show=\"form.accountname.$error.maxlength\">Tên đăng\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tnhập phải ngắn hơn 20 kí tự</span> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-show=\"form.accountname.$error.pattern\">Tên đăng nhập\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tchỉ bao gồm các kí tự a-z và 0-9</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"password\" class=\"col-xs-3 control-label\">Mật\r\n");
      out.write("\t\t\t\t\t\t\t\tkhẩu</label>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-xs-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input class=\"form-control\" name=\"password\" ng-model=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype=\"password\" placeholder=\"Mật khẩu\" ng-minlength=\"6\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tng-maxlength=\"30\" required>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-xs-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"fa fa-check text-success\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tng-show=\"form.password.$dirty && form.password.$valid\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div ng-show=\"form.password.$dirty && form.password.$invalid\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"text-danger\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<i class=\"fa fa-times text-danger\"></i> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-show=\"form.password.$error.required\">Mật khẩu\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tkhông được bỏ trống</span> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-show=\"form.password.$error.minlength\">Mật khẩu\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tphải dài hơn 6 kí tự</span> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tng-show=\"form.password.$error.maxlength\">Mật khẩu\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tphải ngắn hơn 30 kí tự</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"button-dangnhap\" class=\"btn-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"LichTuan.html\"><button type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"btn btn-primary\">Đồng Ý</button></a> <a href=\"DangNhap.html\"><button\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype=\"button\" class=\"btn btn-primary\">Trở Lại</button></a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
